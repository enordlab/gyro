{"version":3,"sources":["Serial.js","App.js","index.js"],"names":["LineBreakTransformer","_classCallCheck","this","container","_createClass","key","value","chunk","controller","lines","split","pop","forEach","line","enqueue","Serial","_this","setApp","app","connect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","navigator","serial","requestPort","comm","sent","open","baudRate","bufferSize","reader","readable","pipeThrough","TextDecoderStream","TransformStream","getReader","writer","writable","getWriter","setTimeout","receive","t0","document","getElementById","innerHTML","message","replace","stop","_callee2","result","str","_context2","read","update","running","send","_ref3","_callee3","_context3","console","log","length","substr","write","enc","encode","buffer","_x","apply","arguments","start","_callee4","_context4","_callee5","_context5","undefined","TextEncoder","dec","TextDecoder","Scene","props","materials","useLoader","MTLLoader","obj","OBJLoader","loader","preload","setMaterials","_jsx","object","rotate","ry","Math","PI","rx","rz","scale","App","_React$Component","_inherits","_super","_createSuper","call","map","s","Number","setState","_objectSpread","state","test_update","_assertThisInitialized","_this2","_jsxs","className","children","type","onClick","event","id","Canvas","position","Suspense","fallback","React","Component","rootElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.9f851bad.chunk.js","sourcesContent":["// Readable Object\n// https://wicg.github.io/serial/#readable-attribute\n\nclass LineBreakTransformer {\n  constructor() {\n    this.container = '';\n  }\n\n  transform(chunk, controller) {\n    this.container += chunk;\n    const lines = this.container.split('\\r\\n');\n    this.container = lines.pop();\n    lines.forEach(line => controller.enqueue(line));\n  }\n\n  flush(controller) {\n    controller.enqueue(this.container);\n  }\n}\n\n\nclass Serial {\n\n  constructor() {\n    this.comm = undefined;\n    this.reader= undefined;\n    this.writer= undefined;\n    this.enc = new TextEncoder();\n    this.dec = new TextDecoder();\n    this.running = false;\n\n    this.app = undefined;\n  }\n\n  setApp = (app) => {\n    this.app = app;\n  }\n\n  // the user wants to connect to an emulated COM port\n  connect = async () =>\n  {\n    if ('serial' in navigator) {\n      try {\n        this.comm = await navigator.serial.requestPort({});\n        await this.comm.open({ baudRate: 115200, bufferSize: 64 });\n        // this.reader = this.comm.readable.getReader();\n\n        this.reader = this.comm.readable\n        .pipeThrough(new TextDecoderStream())\n        .pipeThrough(new TransformStream(new LineBreakTransformer()))\n        .getReader();\n\n        this.writer = this.comm.writable.getWriter();\n        setTimeout(this.receive, 100);\n        // document.getElementById(\"command\").disabled = false;\n        // document.getElementById(\"command\").focus();\n      } catch(err) {\n        document.getElementById(\"results\").innerHTML += err.message.replace(/</g,'&lt;').replace(/>/g,'&gt;') + \"\\r\";\n      }\n    } else {\n      document.getElementById(\"results\").innerHTML +=\n  `The Web serial API needs to be enabled in your browser thru:\n      - <a href=edge://flags/#enable-experimental-web-platform-features>edge://flags/#enable-experimental-web-platform-features</a>\n      - <a href=chrome://flags/#enable-experimental-web-platform-features>chrome://flags/#enable-experimental-web-platform-features</a>\n      - <a href=opera://flags/#enable-experimental-web-platform-features>opera://flags/#enable-experimental-web-platform-features</a>\n  `;\n    }\n  }\n\n  // receive a string from the device\n  receive = async () =>\n  {\n    var result = await this.reader.read();\n    // var str = this.dec.decode(result.value);\n    var str = result.value;\n    // console.log(\"receive\", str.length, str)\n\n    // document.getElementById(\"results\").innerHTML += str.replace(/</g,'&lt;').replace(/>/g,'&gt;').replace(/\\n/g,'');\n    // document.getElementById(\"command\").scrollIntoView();\n\n    this.app.update(str)\n\n    if (this.running)\n      setTimeout(this.receive, 10);\n  }\n\n  // send a string to the device\n  send = async (str) =>\n  {\n    console.log(\"send\", str.length, str)\n    str = str.substr(0,1)\n\n    await this.writer.write(this.enc.encode(str).buffer);\n\n    // document.getElementById(\"command\").value = \"\";\n    // document.getElementById(\"command\").focus();\n\n    this.receive();\n\n  }\n\n  start = async () =>\n  {\n    // var str = document.getElementById(\"command\").value;\n    var str = \"1\";\n    this.send(str + \"\\r\");\n    this.running = true;\n  }\n\n  stop = async () =>\n  {\n    this.running = false;\n  }\n\n}\n\nexport default Serial\n\n","import \"./styles.css\";\nimport * as THREE from \"three\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { useLoader } from \"@react-three/fiber\";\nimport { Environment, OrbitControls } from \"@react-three/drei\";\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\nimport { MTLLoader } from \"three/examples/jsm/loaders/MTLLoader\";\nimport { DDSLoader } from \"three-stdlib\";\nimport React, { useState, Suspense } from \"react\";\nimport \"./Serial\";\nimport Serial from \"./Serial\";\n\n// THREE.DefaultLoadingManager.addHandler(/\\.dds$/i, new DDSLoader());\n\nconst Scene = (props) => {\n  const materials = useLoader(MTLLoader, \"11805_airplane_v2_L2.mtl\");\n  const obj = useLoader(OBJLoader, \"11805_airplane_v2_L2.obj\", (loader) => {\n    materials.preload();\n    loader.setMaterials(materials);\n  });\n\n  // console.log('---', props.rotate.rx);\n  return  (<primitive\n              object={obj}\n              rotation-x={  props.rotate.ry + Math.PI / (-2)}\n              rotation-y={ -props.rotate.rx}\n              rotation-z={  props.rotate.rz}\n              scale={0.003}\n            />\n          );\n};\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {rx: 0, ry: 0, rz: 0};\n    this.serial = new Serial();\n    this.serial.setApp(this);\n    this.buffer = \"\";\n  }\n\n  componentDidMount() {\n    // setInterval(this.test_update, 10);\n  }\n\n  update = (str) => {\n    var rotate = str.split(\",\").map(s => Number(s))\n    switch (rotate.length) {\n      case 3 :\n        console.log(\"three\", rotate)\n        this.setState({\n          ...this.state,\n          rx : rotate[0],\n          ry : rotate[1],\n          rz : rotate[2]\n        })\n        break;\n      default:\n        break;\n    }\n  };\n\n  test_update = () => {\n    this.setState({\n      ...this.state,\n      rx : this.state.rx - 0.001,\n      ry : this.state.ry + 0.001,\n      rz : this.state.rz + 0.001,\n    })\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div>\n          <h1>Gyro Viewer</h1>\n          Select:\n          <button\n            type='button'\n            onClick={(event) => {\n              this.serial.connect();\n            }}\n          >\n            COM\n          </button>\n          <pre id='results'></pre>\n          {/* <input id='command'\n            name='command'\n            disabled={true}\n            autoComplete='off' autoCorrect='off' autoCapitalize='off' spellCheck='false'/> */}\n          <button type='button'\n            onClick={(event) => {\n              this.serial.start();\n            }}\n          >\n            Start\n          </button>\n          <button type='button'\n            onClick={(event) => {\n              this.serial.stop();\n            }}\n          >\n            Stop\n          </button>\n        </div>\n        <Canvas>\n          <pointLight position={[0, 5, 30]} />\n          <Suspense fallback={null}>\n            <Scene rotate={this.state} />\n            {/* <OrbitControls /> */}\n            {/* <Environment preset=\"sunset\" background /> */}\n          </Suspense>\n        </Canvas>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// export default function App() {\n//   const [rotate, setRotate] = useState({rx: 0, ry: 0, rz: 0});\n//   setInterval(() => { setRotate({rx : rotate.rx, ry: rotate.ry + 0.01, rz: rotate.rz}) }, 10)\n\n//   return (\n//     <div className=\"App\">\n//       <Canvas>\n//         <pointLight position={[0, 5, 30]} />\n//         <Suspense fallback={null}>\n//           <Scene rotate={rotate} />\n//           {/* <OrbitControls /> */}\n//           {/* <Environment preset=\"sunset\" background /> */}\n//         </Suspense>\n//       </Canvas>\n//     </div>\n//   );\n// }\n","import ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}